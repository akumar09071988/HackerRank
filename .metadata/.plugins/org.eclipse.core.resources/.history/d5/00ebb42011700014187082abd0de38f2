import java.util.Scanner;


public class Solution {
	
	public void calcMinEnergy(int[] buildingsHeightArr)
	{
		int numBuildings = buildingsHeightArr.length;
		float currentEnergy =0;
		float requirredCurrEnergy =0;
		float minEnergy =0;
		for(int i=0;i<numBuildings;i++)
		{
			requirredCurrEnergy = (float)buildingsHeightArr[i]/(float)2;
			System.out.println(requirredCurrEnergy);
			if(currentEnergy<requirredCurrEnergy)
			{
				currentEnergy= currentEnergy+(requirredCurrEnergy-currentEnergy);
				minEnergy = minEnergy+requirredCurrEnergy;
				System.out.println(currentEnergy+" "+minEnergy);
			}
			else
			{
				if(currentEnergy<buildingsHeightArr[i])
				{
					currentEnergy = currentEnergy-(buildingsHeightArr[i]-currentEnergy);
				}
				else
				{
					currentEnergy = currentEnergy+(currentEnergy-buildingsHeightArr[i]);
				}
				
			}
		}
		System.out.println(minEnergy);
		int actualMinEnergy =0;
		if((minEnergy*10)%10!=0)
		{
			actualMinEnergy =(int)minEnergy+1;	
		}
		else
		{
			actualMinEnergy = (int) minEnergy;
		}
		
		System.out.println(actualMinEnergy);
	}

	public static void main(String[] args) {
	   Solution obj = new Solution();
	   try
	   {
		   
		   Scanner in = new Scanner(System.in);
		   int numBuildings = Integer.parseInt(in.nextLine());
		   int [] buildingsHeightArr = new int[numBuildings];
		   for(int i=0;i<numBuildings;i++)
		   {
			   buildingsHeightArr[i] = in.nextInt();
			   //System.out.println(buildingsHeightArr[i]);
		   }
		   
		   obj.calcMinEnergy(buildingsHeightArr);
	   }
	   catch(Exception e)
	   {
		   e.printStackTrace();
	   }

	}

}
